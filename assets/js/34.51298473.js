(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{250:function(a,t,e){"use strict";e.r(t);var i=e(5),v=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"java应用-内存问题、程序卡顿简单分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java应用-内存问题、程序卡顿简单分析","aria-hidden":"true"}},[a._v("#")]),a._v(" JAVA应用,内存问题、程序卡顿简单分析")]),a._v(" "),e("ul",[e("li",[a._v("要求：\n"),e("ul",[e("li",[a._v("Linux运行环境、JDK1.8")]),a._v(" "),e("li",[a._v("Eclipe MAT (Memory Analyzer)")])])]),a._v(" "),e("li",[a._v("主题\n"),e("ul",[e("li",[a._v("服务线程堆栈查看")]),a._v(" "),e("li",[a._v("OOM分析")])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("http://127.0.0.1:8099/demo/loop?loopSec=1\nhttp://127.0.0.1:8099/demo/lock?lockSec=10\nhttp://127.0.0.1:8099/demo/oom?objNum=6000000\nhttp://127.0.0.1:8099/demo/oss?loopNum=1000\n\nhttp://127.0.0.1:8099/demo/loop2?loopSec=10 运行10次，每次间隔10s\n")])])]),e("h2",{attrs:{id:"服务线程堆栈查看"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务线程堆栈查看","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务线程堆栈查看")]),a._v(" "),e("p",[a._v("​\t\t列举说明查看线程堆栈常用方法、命令")]),a._v(" "),e("h3",{attrs:{id:"查看进程-获取pid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看进程-获取pid","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看进程 获取pid")]),a._v(" "),e("blockquote",[e("p",[a._v("两种方式： jps、  ps -ef | grep java/xxx.jar/进程名")])]),a._v(" "),e("ul",[e("li",[e("p",[a._v("jps:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("> jps -ml\n18967 demo-web-1.0-SNAPSHOT.jar\n19439 sun.tools.jps.Jps -ml\n")])])])]),a._v(" "),e("li",[e("p",[a._v("ps -ef | grep java")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[nohi@nohi logs]$ ps -ef | grep java\nnohi     18967  6475 18 14:01 pts/0    00:00:10 java -jar demo-web-1.0-SNAPSHOT.jar\nnohi     23827 26256  0 14:02 pts/7    00:00:00 grep java\n说明\nUID        PID  PPID  C STIME TTY          TIME CMD\n\n")])])])])]),a._v(" "),e("p",[a._v("18967 23827 为pid")]),a._v(" "),e("h3",{attrs:{id:"查看有问题线程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看有问题线程","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看有问题线程")]),a._v(" "),e("p",[a._v("根据进程，查看进程下线程，根据线程占用CPU、运行时间，获取有问题线程")]),a._v(" "),e("ul",[e("li",[a._v("top -Hp pid")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("top -Hp pid 查看进程下线程信息\n\n PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                                                                          \n20160 nohi      20   0 2976m 172m  13m R 90.6  4.5   1:13.48 java                                                                                                                                             \n18976 nohi      20   0 2976m 172m  13m S  0.3  4.5   0:00.98 java                                                                                                                                             \n18967 nohi      20   0 2976m 172m  13m S  0.0  4.5   0:00.00 java                                                                                                                                             \n18968 nohi      20   0 2976m 172m  13m S  0.0  4.5   0:04.86 java                                                                                                                                             \n18969 nohi      20   0 2976m 172m  13m S  0.0  4.5   0:00.51 java                                                                                                                                             \n18970 nohi      20   0 2976m 172m  13m S  0.0  4.5   0:00.00 java                                                                                                                                             \n18971 nohi      20   0 2976m 172m  13m S  0.0  4.5   0:00.00 java                                                                                                                                             \n18972 nohi      20   0 2976m 172m  13m S  0.0  4.5   0:00.00 java    \n")])])]),e("p",[a._v("​")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("arthas： thread")]),a._v(" "),e("p",[a._v("![image-20200721154745020](/Users/nohi/Library/Application Support/typora-user-images/image-20200721154745020.png)")])])]),a._v(" "),e("h3",{attrs:{id:"打印堆栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打印堆栈","aria-hidden":"true"}},[a._v("#")]),a._v(" 打印堆栈")]),a._v(" "),e("ul",[e("li",[a._v("jstack -l pid 导出线程栈")]),a._v(" "),e("li",[a._v("kill -3 pid")])]),a._v(" "),e("p",[a._v("注：")]),a._v(" "),e("pre",[e("code",[a._v(" 需要进程以nohup 方式启动，kill -3 后会在jar所生成的nohup.out文件中（一般在jar同目录）\n")])]),a._v(" "),e("h3",{attrs:{id:"查看堆栈信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看堆栈信息","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看堆栈信息")]),a._v(" "),e("ol",[e("li",[a._v("printf '%x\\n'  线程ID\n$> printf '%x\\n' 20168\n4ec8")]),a._v(" "),e("li",[a._v("线程栈信息中查询线程id （4ec8）")])]),a._v(" "),e("p",[a._v("![image-20200721155624560](/Users/nohi/Library/Application Support/typora-user-images/image-20200721155624560.png)")]),a._v(" "),e("p",[a._v("​")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("Arthas: thread 22")]),a._v(" "),e("p",[a._v("![image-20200721154940093](/Users/nohi/Library/Application Support/typora-user-images/image-20200721154940093.png)")])])]),a._v(" "),e("h3",{attrs:{id:"查看、备份"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看、备份","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看、备份")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("tail -n 10000 nohup.out > 1.txt")]),a._v(" "),e("p",[a._v("nohup.out 最后1w行数据存储到1.txt文件中备份")])])]),a._v(" "),e("p",[a._v("问题定位：")]),a._v(" "),e("p",[a._v("​\t查看nohup.out/1.txt文件，从尾部向上查看")]),a._v(" "),e("p",[a._v("​    一般如果是代码逻辑问题，卡某个方法，会找到方法执行的堆栈（业务逻辑代码），即可定位问题")]),a._v(" "),e("h2",{attrs:{id:"oom分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oom分析","aria-hidden":"true"}},[a._v("#")]),a._v(" OOM分析")]),a._v(" "),e("ul",[e("li",[a._v("生成dump文件\n"),e("ul",[e("li",[a._v("-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/home/nohi/demo  应用启动后出现内存异常则会自动导出dump文件，默认的文件名是：java_pid<进程号>.hprof")]),a._v(" "),e("li",[a._v("jmap -dump:format=b,file=/home/nohi/demo/dump.dat  pid")]),a._v(" "),e("li",[a._v("arthas: heapdump /home/nohi/demo/dump.hprof")])])]),a._v(" "),e("li",[a._v("MAT 打开dump文件")])]),a._v(" "),e("h2",{attrs:{id:"其它"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其它","aria-hidden":"true"}},[a._v("#")]),a._v(" 其它")]),a._v(" "),e("ul",[e("li",[a._v("工具：arthas\n"),e("ul",[e("li",[a._v("参考：https://alibaba.github.io/arthas/")]),a._v(" "),e("li",[a._v("thread -b 查看线程死锁")]),a._v(" "),e("li",[a._v("sc 查看已加载的类\n"),e("ul",[e("li",[a._v("sc -d *DemoService")])])]),a._v(" "),e("li",[a._v("sm 查看类的方法\n"),e("ul",[e("li",[a._v("sm demo.service.DemoService")])])]),a._v(" "),e("li",[a._v("jad 反编译\n"),e("ul",[e("li",[a._v("jad demo.service.DemoService")])])]),a._v(" "),e("li",[a._v("monitor 监控方法执行情况\n"),e("ul",[e("li",[a._v("monitor -c 10 demo.service.DemoService testLoopAndReturn  -c 统计周期 默认120s")])])]),a._v(" "),e("li",[a._v("watch 查看方法执行数据\n"),e("ul",[e("li",[a._v('watch demo.service.DemoService testLoopAndReturn "{params,returnObj}" -x 3  -x 深度')])])])])])]),a._v(" "),e("h3",{attrs:{id:"作业"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作业","aria-hidden":"true"}},[a._v("#")]),a._v(" 作业")]),a._v(" "),e("ul",[e("li",[a._v("http://127.0.0.1:8099/demo/lock?lockSec=2000\n"),e("ul",[e("li",[a._v("线程堆栈   记录分析过程")])])]),a._v(" "),e("li",[a._v("http://127.0.0.1:8099/demo/oom2?objNum=6000000\n"),e("ul",[e("li",[a._v("objNum多少出现oom")]),a._v(" "),e("li",[a._v("记录分析过程，找出问题代码、原因")])])])])])}],!1,null,null,null);t.default=v.exports}}]);