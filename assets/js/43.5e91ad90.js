(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{259:function(a,e,t){"use strict";t.r(e);var r=t(5),i=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能","aria-hidden":"true"}},[a._v("#")]),a._v(" 性能")]),a._v(" "),t("blockquote",[t("p",[a._v("20190130 https://www.ibm.com/developerworks/cn/java/j-lo-performance-tuning-practice/index.html")])]),a._v(" "),t("h2",{attrs:{id:"常规"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常规","aria-hidden":"true"}},[a._v("#")]),a._v(" 常规")]),a._v(" "),t("ul",[t("li",[a._v("JVM"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("-Xmx   Java Heap最大值，默认值为物理内存的1/4，最佳设值应该视物理内存大小及计算机内其他内存开销而定\n-Xms   Java Heap初始值，Server端JVM最好将-Xms和-Xmx设为相同值，开发测试机JVM可以保留默认值；\n\n-Xmn   Java Heap Young区大小，不熟悉最好保留默认值；\n\n-Xss   每个线程的Stack大小，不熟悉最好保留默认值；\n")])])])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('### 查看线程、进程\n* top -Hp pid 查看进程下线程信息(mac： ps -M pid查看线程信息)\n  查看到耗时的线程\n* printf "%x\\n" threadid 得到十六进制串\n* jstack -l pid 查看堆栈信息\n')])])]),t("h2",{attrs:{id:"java-应用诊断工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-应用诊断工具","aria-hidden":"true"}},[a._v("#")]),a._v(" Java 应用诊断工具")]),a._v(" "),t("h3",{attrs:{id:"jps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jps","aria-hidden":"true"}},[a._v("#")]),a._v(" JPS")]),a._v(" "),t("blockquote",[t("p",[a._v("查看进程信息")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("> jps -m -l\n")])])]),t("h3",{attrs:{id:"jmap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jmap","aria-hidden":"true"}},[a._v("#")]),a._v(" jmap")]),a._v(" "),t("blockquote",[t("p",[a._v("可以生成 java 程序的 dump 文件， 也可以查看堆内对象示例的统计信息、查看 ClassLoader 的信息以及 finalizer 队列")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("jmap -dump:format=b,file=dumpFileName pid 内存使用情况dump到文件中")]),a._v(" "),t("p",[a._v("jmap -dump:format=b,file=/tmp/dump.dat 21711")])]),a._v(" "),t("li",[t("p",[a._v("生成快照：jmap -dump:format=b,file=heapdump.phrof pid")])]),a._v(" "),t("li",[t("p",[a._v("jmap -heap pid:查看堆使用情况")])]),a._v(" "),t("li",[t("p",[a._v("jmap -histo pid：查看堆中对象数量和大小")])])]),a._v(" "),t("h3",{attrs:{id:"jstat-gcutil-332-1000"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jstat-gcutil-332-1000","aria-hidden":"true"}},[a._v("#")]),a._v(" jstat -gcutil 332 1000")]),a._v(" "),t("ul",[t("li",[a._v("jstat -gcutil pid  1000(轮循时间间隔)")])]),a._v(" "),t("h3",{attrs:{id:"jstack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jstack","aria-hidden":"true"}},[a._v("#")]),a._v(" jstack")]),a._v(" "),t("p",[a._v("jstack是jdk自带的线程堆栈分析工具，使用该命令可以查看或导出 Java 应用程序中线程堆栈信息。")]),a._v(" "),t("ul",[t("li",[a._v("top -H -p pid 定位 Java 进程和线程")]),a._v(" "),t("li",[a._v("mac： ps -M pid查看线程信息")]),a._v(" "),t("li",[a._v("jstack -l pid 导出线程栈")])]),a._v(" "),t("h3",{attrs:{id:"jconsole"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jconsole","aria-hidden":"true"}},[a._v("#")]),a._v(" Jconsole")]),a._v(" "),t("ul",[t("li",[a._v('启动命令增加：-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=12345 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=192.168.0.194"')]),a._v(" "),t("li",[a._v("本机启动jconsole")])]),a._v(" "),t("h3",{attrs:{id:"jinfo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jinfo","aria-hidden":"true"}},[a._v("#")]),a._v(" jinfo")]),a._v(" "),t("blockquote",[t("p",[a._v("jinfo可以用来查看正在运行的java运用程序的扩展参数，甚至支持在运行时动态地更改部分参数")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("jinfo  pid")])]),a._v(" "),t("li",[t("p",[a._v("-flag< name >: 打印指定java虚拟机的参数值")]),a._v(" "),t("p",[a._v("-flag [+|-]< name >：设置或取消指定java虚拟机参数的布尔值")]),a._v(" "),t("p",[a._v("-flag < name >=< value >：设置指定java虚拟机的参数的值")])])]),a._v(" "),t("h3",{attrs:{id:"jcmd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jcmd","aria-hidden":"true"}},[a._v("#")]),a._v(" jcmd")]),a._v(" "),t("blockquote",[t("p",[a._v("在JDK 1.7之后，新增了一个命令行工具jcmd。它是一个多功能工具，可以用来导出堆，查看java进程，导出线程信息，执行GC等。jcmd拥有jmap的大部分功能，Oracle官方建议使用jcmd代替jmap。")])]),a._v(" "),t("ul",[t("li",[a._v("jcmd -l 列出当前运行的所有虚拟机")]),a._v(" "),t("li",[a._v("jcmd pid help 列出该虚拟机支持的所有命令")]),a._v(" "),t("li",[a._v("jcmd pid VM.command_line")])]),a._v(" "),t("h3",{attrs:{id:"jprofiler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jprofiler","aria-hidden":"true"}},[a._v("#")]),a._v(" JProfiler")]),a._v(" "),t("blockquote",[t("p",[a._v("https://www.cnblogs.com/AmilyWilly/p/7272160.html?utm_source=itdadao&utm_medium=referral\n建议安装 9.2.1  ，安装10 idea中出现license 失效问题。")])]),a._v(" "),t("p",[a._v("L-Larry_Lau@163.com#40775-3wle0g1uin5c1#0674")]),a._v(" "),t("h4",{attrs:{id:"jprofiler9-linux-was"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jprofiler9-linux-was","aria-hidden":"true"}},[a._v("#")]),a._v(" jprofiler9 + linux + was")]),a._v(" "),t("blockquote",[t("p",[a._v("服务器安装，不需要启动。")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("客户端(windows)")])]),a._v(" "),t("li",[t("p",[a._v("start center -> new seession -> new server integration")])]),a._v(" "),t("li",[t("p",[a._v("选择容器(was) ....")])]),a._v(" "),t("li",[t("p",[a._v("Remote installation directory 服务器jprofiler安装目录")])]),a._v(" "),t("li",[t("p",[a._v("config synchronization 选择 manual synchronization(手工同步)")]),a._v(" "),t("ul",[t("li",[a._v("配置目录输入一个目录，需要把客户端的config文件同步过去。")]),a._v(" "),t("li",[a._v("客户端config.xml  C:\\Users\\用户名(因人不而异).jprofiler9\\config.xml")])])]),a._v(" "),t("li",[t("p",[a._v("Locate the config file。需要拷贝was服务器的server.xml至本地目录。")]),a._v(" "),t("ul",[t("li",[a._v("/opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/appNode01Cell/nodes/appNode01/servers/server1/server.xml")])])]),a._v(" "),t("li",[t("p",[a._v("最后一步： 选择稍后启动。")])]),a._v(" "),t("li",[t("p",[a._v("第一次会连接失败，需要将本地目录server.xml拷贝到WebSphere的server.xml配置文件的位置，然后覆盖之（覆盖之前备份一下）")])]),a._v(" "),t("li",[t("p",[a._v("启动was")])]),a._v(" "),t("li",[t("p",[a._v("本地连接")])])]),a._v(" "),t("h3",{attrs:{id:"mat-memory-analyzer-tool"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mat-memory-analyzer-tool","aria-hidden":"true"}},[a._v("#")]),a._v(" MAT (Memory Analyzer tool)")]),a._v(" "),t("blockquote",[t("p",[a._v("参考：https://cloud.tencent.com/developer/article/1379028")])]),a._v(" "),t("p",[a._v("在线分析：https://fastthread.io/")]),a._v(" "),t("h3",{attrs:{id:"async-profiler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#async-profiler","aria-hidden":"true"}},[a._v("#")]),a._v(" async-profiler")]),a._v(" "),t("blockquote",[t("p",[a._v("https://github.com/jvm-profiling-tools/async-profiler")])]),a._v(" "),t("ul",[t("li",[a._v("./profiler.sh -d 30 -f ./aaa.svg 2488")])])])}],!1,null,null,null);e.default=i.exports}}]);